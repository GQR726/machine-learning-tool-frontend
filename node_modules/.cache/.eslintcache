[{"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\index.js":"1","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\App.js":"2","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\reportWebVitals.js":"3","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\ShowBookDetails.js":"4","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\CreateBook.js":"5","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\ShowBookList.js":"6","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\UpdateBookInfo.js":"7","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\BookCard.js":"8","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\withRouter.js":"9","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\Home.js":"10","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\Model.js":"11","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\Data.js":"12","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\Dataf.js":"13","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\Datab.js":"14","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\index.js":"15","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\reportWebVitals.js":"16","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\App.js":"17","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\ShowBookList.js":"18","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\CreateBook.js":"19","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\UpdateBookInfo.js":"20","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\Model.js":"21","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\Home.js":"22","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\BookCard.js":"23","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\withRouter.js":"24","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\DataT.js":"25","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\DataTypeCard.js":"26","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\CreateData.js":"27","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\UpdateDataInfo.js":"28","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\DatadetailCard.js":"29","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\CreateDataDetail.js":"30","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\UpdateDataDetail.js":"31"},{"size":500,"mtime":1648779615350,"results":"32","hashOfConfig":"33"},{"size":4197,"mtime":1674434766396,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1648779615448,"results":"35","hashOfConfig":"33"},{"size":3581,"mtime":1674182528287,"results":"36","hashOfConfig":"33"},{"size":22203,"mtime":1674441479855,"results":"37","hashOfConfig":"33"},{"size":23557,"mtime":1674434375142,"results":"38","hashOfConfig":"33"},{"size":23374,"mtime":1674441584317,"results":"39","hashOfConfig":"33"},{"size":746,"mtime":1674183387844,"results":"40","hashOfConfig":"33"},{"size":286,"mtime":1673924869845,"results":"41","hashOfConfig":"33"},{"size":3949,"mtime":1674437528810,"results":"42","hashOfConfig":"33"},{"size":6942,"mtime":1674181523609,"results":"43","hashOfConfig":"33"},{"size":16114,"mtime":1674429457193,"results":"44","hashOfConfig":"33"},{"size":16095,"mtime":1674429481469,"results":"45","hashOfConfig":"33"},{"size":16102,"mtime":1674429498989,"results":"46","hashOfConfig":"33"},{"size":500,"mtime":1648779615350,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1648779615448,"results":"49","hashOfConfig":"48"},{"size":4268,"mtime":1674558772948,"results":"50","hashOfConfig":"48"},{"size":23011,"mtime":1674558197441,"results":"51","hashOfConfig":"48"},{"size":18492,"mtime":1674558197662,"results":"52","hashOfConfig":"48"},{"size":19707,"mtime":1674558197440,"results":"53","hashOfConfig":"48"},{"size":2473,"mtime":1674558197441,"results":"54","hashOfConfig":"48"},{"size":2976,"mtime":1674558918829,"results":"55","hashOfConfig":"48"},{"size":709,"mtime":1674524559861,"results":"56","hashOfConfig":"48"},{"size":286,"mtime":1674558875628,"results":"57","hashOfConfig":"48"},{"size":2094,"mtime":1674537163482,"results":"58","hashOfConfig":"48"},{"size":728,"mtime":1674526320711,"results":"59","hashOfConfig":"48"},{"size":3739,"mtime":1674558197656,"results":"60","hashOfConfig":"48"},{"size":7577,"mtime":1674546063598,"results":"61","hashOfConfig":"48"},{"size":579,"mtime":1674536552019,"results":"62","hashOfConfig":"48"},{"size":13790,"mtime":1674558197529,"results":"63","hashOfConfig":"48"},{"size":14921,"mtime":1674558197440,"results":"64","hashOfConfig":"48"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"19sosiz",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16s3rou",{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"124"},"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\index.js",[],[],["170","171"],"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\App.js",["172","173","174","175","176","177","178","179","180","181","182","183","184"],[],"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\reportWebVitals.js",[],[],"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\ShowBookDetails.js",["185"],[],"import React, { Component } from 'react';\r\nimport { Link, useParams  } from 'react-router-dom';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport withRouter from './withRouter';\r\n\r\nclass showBookDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      book: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props);\r\n    axios\r\n      .get('http://localhost:8082/api/books/'+this.props.params.id)\r\n      .then(res => {\r\n        // console.log(\"Print-showBookDetails-API-response: \" + res.data);\r\n        this.setState({\r\n          book: res.data\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error from ShowBookDetails\");\r\n      })\r\n  };\r\n\r\n  onDeleteClick (id) {\r\n    axios\r\n      .delete('http://localhost:8082/api/books/'+id)\r\n      .then(res => {\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error form ShowBookDetails_deleteClick\");\r\n      })\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const book = this.state.book;\r\n    let BookItem = <div>\r\n      <table className=\"table table-hover table-dark\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">First</th>\r\n            <th scope=\"col\">Last</th>\r\n            <th scope=\"col\">Handle</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Title</td>\r\n            <td>{ book.title }</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Author</td>\r\n            <td>{ book.author }</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>ISBN</td>\r\n            <td>{ book.isbn }</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">4</th>\r\n            <td>Publisher</td>\r\n            <td>{ book.publisher }</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">5</th>\r\n            <td>Published Date</td>\r\n            <td>{ book.published_date }</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">6</th>\r\n            <td>Description</td>\r\n            <td>{ book.description }</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    return (\r\n      <div >\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <br />\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Model's Record</h1>\r\n              <p className=\"lead text-center\">\r\n                  View Model's Info\r\n              </p>\r\n              <hr /> <br />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            { BookItem }\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <button type=\"button\" className=\"btn btn-outline-danger btn-lg btn-block\" onClick={this.onDeleteClick.bind(this,book._id)}>Delete Book</button><br />\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n              <Link to={`/home/edit-book/${book._id}`} className=\"btn btn-outline-info btn-lg btn-block\">\r\n                    Edit Book\r\n              </Link>\r\n              <br />\r\n            </div>\r\n\r\n          </div>\r\n            {/* <br />\r\n            <button type=\"button\" class=\"btn btn-outline-info btn-lg btn-block\">Edit Book</button>\r\n            <button type=\"button\" class=\"btn btn-outline-danger btn-lg btn-block\">Delete Book</button> */}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter (showBookDetails);","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\CreateBook.js",["186","187"],[],"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\ShowBookList.js",["188","189","190","191","192","193"],[],"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\UpdateBookInfo.js",["194"],[],"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\BookCard.js",["195"],[],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as echarts from 'echarts';\r\nimport '../App.css';\r\n\r\nconst BookCard = (props) => {\r\n    const  book  = props.book;\r\n\r\n    return(\r\n        <div className=\"card-container\" style={{height:\"40px\",marginTop:\"0px\",width:\"800px\"}}>\r\n            <div className=\"desc\">\r\n                <h2>\r\n                    <Link to={`/home/edit-book/${book._id}`}>\r\n                        Name:{book.title}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n_neighbours:{book.author}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;K:{book.publisher}\r\n                    </Link>\r\n                </h2>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BookCard;","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\withRouter.js",[],[],"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\Home.js",["196","197","198","199","200","201","202","203"],[],"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\Model.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217"],[],"import React, { Component } from 'react';\r\n// import '../App.css';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport BookCard from './BookCard';\r\n\r\nimport { Input, Space, Button,Tooltip,Select,Divider,Card, Col, Row } from 'antd';\r\nimport { RedoOutlined,QuestionCircleOutlined } from '@ant-design/icons';\r\nimport styles from \"./styles/personal.module.css\";\r\n\r\nimport * as Highcharts from 'highcharts';\r\nconst text = <span>prompt text(Treatment strategy?)</span>;\r\n\r\nclass ShowBookList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      backbook:[]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get('http://localhost:8082/api/books')\r\n      .then(res => {\r\n        this.setState({\r\n          books: res.data,\r\n          backbook: res.data\r\n        })\r\n      })\r\n      .catch(err =>{\r\n        console.log('Error from ShowBookList');\r\n      })\r\n  }0;\r\n  handleInput = (event) => {\r\n    console.log(\"input\",event.target.value)\r\n\r\n    var newList = this.state.backbook.filter(item=>\r\n       (item.title.toUpperCase().includes(event.target.value.toUpperCase())))\r\n\r\n    /* console.log(newList) */\r\n\r\n    this.setState({\r\n      books:newList\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const books = this.state.books;\r\n    console.log(\"PrintBook: \" + books);\r\n    let bookList;\r\n\r\n    if(!books) {\r\n      bookList = \"there is no book record!\";\r\n    } else {\r\n      bookList = books.map((book, k) =>\r\n        <BookCard book={book} key={k} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div >\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <br />\r\n              <h2 className=\"display-4 text-center\">Model List</h2>\r\n            </div>\r\n\r\n            <div className=\"col-md-11\">\r\n              <Link to=\"/home/create-book\" className=\"btn btn-outline-warning float-right\">\r\n                + Add New Model\r\n              </Link>\r\n              <br />\r\n              <br />\r\n              <hr />\r\n            </div>\r\n          </div>\r\n          <div >\r\n           <input className='form-control' onInput={this.handleInput} onChange={(evt)=>{\r\n              this.setState({\r\n                text:evt.target.value\r\n              }) \r\n            }}/>\r\n          </div>\r\n          <div className=\"list\">\r\n            {bookList}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    //   <div className=\"personal\">\r\n    //         <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n    //         <div className=\"site-card-wrapper\">\r\n    //         <div className=\"list\">\r\n    //             {bookList}\r\n    //         </div>\r\n    //         <div className=\"col-md-11\">\r\n    //           <Link to=\"/home/create-book\" className=\"btn btn-outline-warning float-right\">\r\n    //             + Add New Book\r\n    //           </Link>\r\n    //           <br />\r\n    //           <br />\r\n    //           <hr />\r\n    //         </div>\r\n    //             <Row gutter={16}>\r\n    //             <Col span={10}>\r\n    //                 <Card bordered={false}>\r\n    //                     <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex' }}>\r\n    //                         <Space size=\"middle\">\r\n    //                             Patient Data: \r\n    //                             <Button type=\"primary\" icon={<RedoOutlined />}>Genetic</Button>\r\n    //                             <Button type=\"primary\" icon={<RedoOutlined />}>fMRI</Button>\r\n    //                             <Button type=\"primary\" icon={<RedoOutlined />}>Behavioural</Button>\r\n    //                         </Space>\r\n    //                         <Space size=\"middle\">\r\n    //                             Strategy:\r\n    //                             <Tooltip placement=\"bottomLeft\" title={text}>\r\n    //                                 <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n    //                             </Tooltip>\r\n    //                             <Select\r\n    //                             defaultValue=\"Early Fusion\"\r\n    //                             style={{ width: 120 }}\r\n    //                             // onChange={handleChange}\r\n    //                             options={[\r\n    //                                 {\r\n    //                                 value: '1',\r\n    //                                 label: 'Early Fusion',\r\n    //                                 },\r\n    //                                 {\r\n    //                                 value: '2',\r\n    //                                 label: 'Late Fusion',\r\n    //                                 }\r\n    //                             ]}\r\n    //                             />\r\n    //                         </Space>\r\n    //                         <div className={styles.PredictB}>\r\n    //                         <Button type=\"primary\" >Predict</Button>             \r\n    //                         </div>\r\n    //                     </Space>\r\n    //                 </Card>\r\n    //             </Col>\r\n    //             <Col span={8}>\r\n    //                 <Card bordered={false}>\r\n    //                 <div className={styles.modelBox} style={{ padding: 20, minHeight: 220,maxWidth:410}}>\r\n    //                         <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n    //                             <h1>Model</h1>\r\n    //                             <p>Classifier: </p>\r\n    //                             <p>n_neighbours:</p>\r\n    //                             <p>neighbours_type:</p>\r\n    //                             <p>feature_weights:</p>\r\n    //                             <p>voting_type:</p>\r\n    //                         </Space>\r\n    //                     </div>\r\n    //                 </Card>\r\n    //             </Col>\r\n    //             </Row>\r\n    //         </div>\r\n    //         </Space>\r\n    //         <Divider orientation=\"left\">Analytics</Divider>\r\n    //         <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex' }}>\r\n    //         <div className=\"site-card-wrapper\">\r\n    //             <Row gutter={16}>\r\n    //             <Col span={8}>\r\n    //                 <Card bordered={false}>\r\n    //                 <div id=\"main\" style={{heigh:\"400px\"}}>\r\n    //                     1            \r\n    //                 </div>\r\n    //                 </Card>\r\n    //             </Col>\r\n    //             <Col span={8}>\r\n    //                 <Card bordered={false}>\r\n    //                 Card content\r\n    //                 </Card>\r\n    //             </Col>\r\n    //             <Col span={8}>\r\n    //                 <Card bordered={false}>\r\n    //                 Card content\r\n    //                 </Card>\r\n    //             </Col>\r\n    //             </Row>\r\n    //         </div>\r\n    //         </Space>\r\n    //     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowBookList;","C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\Data.js",["218","219","220","221","222","223"],[],"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\Dataf.js",["224","225","226","227","228","229"],[],"C:\\Users\\xzc13\\CISE_Repos\\cise_ass1a_worksheet3\\mern_a_to_z_client\\src\\components\\Datab.js",["230","231","232","233","234","235"],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\index.js",[],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\reportWebVitals.js",[],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\App.js",["236"],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\ShowBookList.js",["237","238","239","240","241","242","243"],[],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport BetterScroll from 'better-scroll';\r\nimport { Space, Button,Tooltip,Select,Divider,Card, Col, Row } from 'antd';\r\nimport { RedoOutlined,QuestionCircleOutlined } from '@ant-design/icons';\r\nimport styles from \"./styles/personal.module.css\";\r\nimport * as Highcharts from 'highcharts';\r\nconst text = <span>prompt text(Treatment strategy?)</span>;\r\n\r\nclass Data extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      datad: [],\r\n      backdatad:[],\r\n    }\r\n }\r\n componentDidMount() {\r\n    axios\r\n    .get('http://localhost:8082/api/articles')\r\n    .then(res => {\r\n      this.setState({\r\n          datad: res.data,\r\n          backdatad: res.data\r\n      })\r\n    })\r\n    .catch(err =>{\r\n      console.log('Error from ShowdataList');\r\n    })\r\n}0;\r\n  render(){\r\n      let {DataName} = this.props\r\n      const datad = this.state.datad;\r\n      console.log(\"Printdata: \" + datad);\r\n      let dataList;\r\n\r\n      if(!datad) {\r\n        dataList = \"there is no data record!\";\r\n      } else {\r\n        dataList = datad.map((data, k) =>\r\n          <Button  type=\"primary\" data={data} key={k} onClick={()=>{\r\n            // console.log(data)\r\n            this.props.onEvent(data.Numerical)\r\n            this.props.onEvent2(data.Categorical)\r\n        }}>{data.ID}</Button>\r\n        );\r\n      }\r\n      return(\r\n          <div className=\"articleitem\" onClick={()=>{\r\n              \r\n          }}>\r\n              <dl>\r\n                  <dt>Name:{DataName}</dt>\r\n                  <Button  type=\"primary\" onClick={()=>{\r\n                      // console.log(data)\r\n                      var newList = this.state.backdatad.filter(item=>\r\n                        (item.Name.toUpperCase().includes(DataName.toUpperCase())))\r\n                \r\n                    this.setState({\r\n                        datad:newList\r\n                    })\r\n                  }}>{\"data.ID\"}</Button>\r\n                  {dataList}\r\n              </dl>\r\n          </div>\r\n      )\r\n      \r\n  }\r\n}\r\n\r\nclass FilmItem extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      color:true,\r\n      isShow:false,\r\n      isShow2:true,\r\n      isShow3:true\r\n    }\r\n }\r\n  render(){\r\n      let {title,author,isbn,description,publisher,published_date,current3,current2} = this.props\r\n      return(\r\n          <div className=\"articleitem\" style={{ color:(this.state.color==true&&current3==current2)? \"white\":\"black\" }} onClick={()=>{\r\n              console.log(current2)\r\n              console.log(current3)\r\n              this.props.onEvent(title)\r\n              this.props.onEvent2(author)\r\n              this.props.onEvent3(isbn)\r\n              this.props.onEvent4(published_date)\r\n              this.props.onEvent5(description)\r\n              this.props.onEvent6(publisher)\r\n              if(current3!=current2){\r\n                current2=current3\r\n                this.props.onEvent7(current2)\r\n              }else{\r\n                this.setState({color:!this.state.color})\r\n              }\r\n              // this.setState({color:!this.state.color})\r\n          }}>\r\n              <dl>\r\n                  <dt>Name:{title}</dt>\r\n                  <dd>n_neighbours:{author}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;K:{publisher} </dd>\r\n              </dl>\r\n          </div>\r\n      )\r\n      \r\n  }\r\n}\r\nclass ShowBookList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      backbook:[],\r\n      datad: [],\r\n      backdatad:[],\r\n      datas: [],\r\n      backdata:[],\r\n      title: '',\r\n      isbn: '',\r\n      author: '',\r\n      description: '',\r\n      published_date: '',\r\n      publisher: '',\r\n      current:0,\r\n      current2:1008611,\r\n      current3:0,\r\n      \r\n      // DataName,\r\n      DataName: 0,\r\n      Numerical:0,\r\n      Categorical: 0,\r\n      Times: 0,\r\n      Input: '',\r\n      Data6: 0,\r\n      number1:1,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    axios\r\n      .get('http://localhost:8082/api/books')\r\n      .then(res => {\r\n        this.setState({\r\n          books: res.data,\r\n          backbook: res.data\r\n        })\r\n        new BetterScroll(\".modelBox\")\r\n      })\r\n      .catch(err =>{\r\n        console.log('Error from ShowBookList');\r\n      })\r\n      axios\r\n      .get('http://localhost:8082/api/articles')\r\n      .then(res => {\r\n        this.setState({\r\n            datad: res.data,\r\n            backdatad: res.data\r\n        })\r\n      })\r\n      .catch(err =>{\r\n        console.log('Error from ShowdataList');\r\n      })\r\n      axios\r\n      .get('http://localhost:8082/api/datas')\r\n      .then(res => {\r\n        this.setState({\r\n          datas: res.data,\r\n          backdata: res.data\r\n        })\r\n      })\r\n      .catch(err =>{\r\n        console.log('Error from ShowdataList');\r\n      })\r\n  }0;\r\n  handleInput = (event) => {\r\n    // console.log(\"input\",event.target.value)\r\n\r\n    var newList = this.state.backbook.filter(item=>\r\n       (item.title.toUpperCase().includes(event.target.value.toUpperCase())))\r\n\r\n    this.setState({\r\n      books:newList\r\n    })\r\n  }\r\n  handleInput2 = (event) => {\r\n    // console.log(\"input\",event.target.value)\r\n       \r\n    var newList = this.state.backdatad.filter(item=>\r\n      (item.Name.toUpperCase().includes(this.state.DataName.toUpperCase())))\r\n\r\n    var newList2 = newList.filter(item=>\r\n      (item.ID.toUpperCase().includes(event.target.value.toUpperCase())))\r\n    this.setState({\r\n      datad:newList2\r\n    })\r\n  }\r\n  onChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n    this.setState({\r\n      number1:value\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const books = this.state.books;\r\n\r\n    const datas = this.state.datas;\r\n    console.log(\"Printdata: \" + datas);\r\n    let dataList;\r\n\r\n    if(!datas) {\r\n      dataList = \"there is no data record!\";\r\n    } else {\r\n      dataList = datas.map((data, k) =>\r\n        // <DataCard data={data} key={k} />\r\n        <Button type=\"primary\" icon={<RedoOutlined />} key={k} onClick={()=>{\r\n          console.log(\"input\",this.state.Input)\r\n          console.log(data)\r\n          var newList = this.state.backdatad.filter(item=>\r\n            (item.Name.toUpperCase().includes(data.Name.toUpperCase())))\r\n            var newList2 = newList.filter(item=>\r\n              (item.ID.toUpperCase().includes(this.state.Input.toUpperCase())))\r\n            this.setState({\r\n              datad:newList2,\r\n              DataName:data.Name\r\n            })\r\n          if(this.state.current!=k){\r\n            this.setState({\r\n              current:k,\r\n              Times:0,\r\n            })}\r\n            else if(this.state.current===k){\r\n              this.setState({\r\n                isShow:!this.state.isShow,\r\n                isShow3:true,\r\n                Input:''\r\n              })\r\n            }\r\n        }}>{data.Name}</Button>\r\n      );\r\n    }\r\n\r\n    const datad = this.state.datad;\r\n      console.log(\"Printdata: \" + datad);\r\n      let dataList2;\r\n\r\n      if(!datad) {\r\n        dataList2 = \"there is no data record!\";\r\n      } else {\r\n        dataList2 = datad.map((data, k) =>\r\n          <Button  type=\"primary\" data={data} key={k} onClick={()=>{\r\n            this.setState({\r\n              Times:parseInt(this.state.Times)+1\r\n            })\r\n            console.log(this.state.Numerical)\r\n            if(this.state.Times<1){\r\n              this.setState({\r\n                Numerical:parseInt(this.state.Numerical)+parseInt(data.Numerical),\r\n                Categorical:parseInt(this.state.Categorical)+parseInt(data.Categorical)\r\n              })\r\n            }\r\n            console.log(this.state.Numerical)\r\n        }}>{data.ID}</Button>\r\n        );\r\n      }\r\n    var num1 = parseInt(this.state.author);\r\n    var num2 = parseInt(this.state.publisher);\r\n    var num3 = parseInt(this.state.DataName);\r\n    var num4 = parseInt(this.state.Numerical);\r\n    var num5 = parseInt(this.state.Categorical);\r\n    var num01 = num4+num5;\r\n    var number01 = parseInt(this.state.number1);\r\n    console.log(num01)\r\n    return (\r\n      <div className=\"personal\">\r\n            <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n            <div className=\"site-card-wrapper\">\r\n                <Row gutter={16}>\r\n                <Col span={10}>\r\n                    <Card bordered={false} >\r\n                        <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex' }}>\r\n                        <Space size=\"middle\">\r\n                                Model: \r\n                                <Button type=\"primary\" icon={<RedoOutlined />} onClick={()=>{\r\n                                  if(this.state.current!=1008611){\r\n                                    this.setState({\r\n                                      current:1008611\r\n                                    })}\r\n                                    else if(this.state.current===1008611){\r\n                                      this.setState({\r\n                                        isShow3:!this.state.isShow3,\r\n                                        isShow:false,\r\n                                      })\r\n                                    }\r\n                                }}>Model</Button>\r\n                            </Space>\r\n                            <Space size=\"middle\">\r\n                            <Space size={[8, 16]} wrap>\r\n                                Patient Data: \r\n                                {dataList}\r\n                            </Space>\r\n                            </Space>\r\n                            {this.state.isShow &&\r\n                            <Space>\r\n                              <Space size=\"middle\">\r\n                                {this.state.DataName}:\r\n                                <input placeholder='Patient_ID'  onInput={this.handleInput2} onChange={(evt)=>{\r\n                                        this.setState({\r\n                                            Input:evt.target.value\r\n                                        })\r\n                                    }}/>\r\n                              </Space>\r\n                              <Space size=\"middle\">\r\n                                <Space size={[8, 16]} wrap>\r\n                                {dataList2}\r\n                                </Space>\r\n                              </Space>\r\n                            </Space>}\r\n                            <Space size=\"middle\">\r\n                                Strategy:\r\n                                <Tooltip placement=\"bottomLeft\" title={text}>\r\n                                    <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                                </Tooltip>\r\n                                <Select\r\n                                defaultValue=\"Early Fusion\"\r\n                                style={{ width: 120 }}\r\n                                onChange={this.onChange}\r\n                                options={[\r\n                                    {\r\n                                    value: '1',\r\n                                    label: 'Early Fusion',\r\n                                    },\r\n                                    {\r\n                                    value: '2',\r\n                                    label: 'Late Fusion',\r\n                                    }\r\n                                ]}\r\n                                />\r\n                            </Space>\r\n                            <div className={styles.PredictB}>\r\n                            {/* <Button type=\"primary\" >Predict</Button> */}\r\n                            <Button type=\"primary\" onClick={()=>{\r\n                                    // this.setState({\r\n                                    //   train:parseInt(this.state.author)\r\n                                    // })\r\n                                    // var num1 = parseInt(this.state.author);\r\n                                    // var num2 = parseInt(this.state.publisher);\r\n                                    Highcharts.chart('main', {\r\n                                      chart: {\r\n                                        type: 'bar'\r\n                                      },\r\n                                      title: {\r\n                                        text: 'Top Features'\r\n                                      },\r\n                                      xAxis: {\r\n                                        categories: ['caarms_08', 'panss_neg', 'IDREK', 'hippocamp', 'smoking_his','familial_his']\r\n                                      },\r\n                                      yAxis: {\r\n                                        min: 0,\r\n                                        title: {\r\n                                          text: ''\r\n                                        }\r\n                                      },\r\n                                      legend: {\r\n                                        reversed: true\r\n                                      },\r\n                                      plotOptions: {\r\n                                        series: {\r\n                                          stacking: 'normal',\r\n                                          dataLabels: {\r\n                                            enabled: true\r\n                                          }\r\n                                        }\r\n                                      },\r\n                                      series: [\r\n                                      {\r\n                                        name: 'Importance',\r\n                                        data: [90*number01+num1+num2, 80*number01+num1+num2, 70*number01+num1+num2,\r\n                                           50*number01+num1+num2, 40*number01+num1+num2,20*number01+num1+num2]\r\n                                      }]\r\n                                    });\r\n                                    Highcharts.chart('main2', {\r\n                                      title: {\r\n                                        text: 'Profile'\r\n                                    },\r\n                                \r\n                                    subtitle: {\r\n                                        text: ''\r\n                                    },\r\n                                \r\n                                    yAxis: {\r\n                                        title: {\r\n                                            text: ''\r\n                                        }\r\n                                    },\r\n                                \r\n                                    xAxis: {\r\n                                      categories: ['IRDEK', 'HCETBI', 'LRES', 'NGISEDOIB'],\r\n                                        accessibility: {\r\n                                            rangeDescription: ''\r\n                                        }\r\n                                    },\r\n                                \r\n                                    legend: {\r\n                                        layout: 'vertical',\r\n                                        align: 'right',\r\n                                        verticalAlign: 'middle'\r\n                                    },\r\n                                \r\n                                    plotOptions: {\r\n                                        series: {\r\n                                            label: {\r\n                                                connectorAllowed: false\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                \r\n                                    series: [{\r\n                                        name: 'Control',\r\n                                        data: [2.5*number01+num01, 4.5*number01+num01, 2*number01+num01, 3*number01+num01]\r\n                                    }, {\r\n                                        name: 'UHR',\r\n                                        data: [2*number01+num01,2*number01+num01,3*number01+num01,6*number01+num01]\r\n                                    }, {\r\n                                        name: 'Remit',\r\n                                        data: [1*number01+num01,5*number01+num01,3*number01+num01,2*number01+num01]\r\n                                    }, {\r\n                                        name: 'Convert',\r\n                                        data: [5*number01+num01,6*number01+num01,5*number01+num01,4*number01+num01]\r\n                                    }, {\r\n                                        name: 'Sample',\r\n                                        data: [4*number01+num01,2*number01+num01,4*number01+num01,5*number01+num01]\r\n                                    }],\r\n                                \r\n                                    responsive: {\r\n                                        rules: [{\r\n                                            condition: {\r\n                                                maxWidth: 500\r\n                                            },\r\n                                            chartOptions: {\r\n                                                legend: {\r\n                                                    layout: 'horizontal',\r\n                                                    align: 'center',\r\n                                                    verticalAlign: 'bottom'\r\n                                                }\r\n                                            }\r\n                                        }]\r\n                                    }\r\n                                    });\r\n                                    this.setState({\r\n                                      isShow2:true,\r\n                                    })\r\n                                }}>Predict</Button>             \r\n                            </div>\r\n                        </Space>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                {!this.state.isShow3 && <Card bordered={false}>\r\n                    <div className={styles.modelBox} style={{padding: 20, minHeight: 220,maxWidth:410}}>\r\n                      <h1>Model</h1>\r\n                                <input placeholder='Model Name'  onInput={this.handleInput} onChange={(evt)=>{\r\n                                    this.setState({\r\n                                        text:evt.target.value\r\n                                    })\r\n                                }}/>\r\n                    <div className='modelBox' style={{height:'215px', padding: 20, minHeight: 220,maxWidth:410,overflow:'hidden'}}>\r\n                            <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n                                {\r\n                                books.map((article, index)=>\r\n                                        <FilmItem key ={index} {...article} current2={this.state.current2} current3={index}\r\n                                        onEvent={(value)=>{\r\n                                            \r\n                                            this.setState({\r\n                                                title:value\r\n                                            })\r\n                                        }}\r\n                                        onEvent2={(value)=>{\r\n                                            // console.log(\"CtoP\",value)\r\n                                            this.setState({\r\n                                                author:value\r\n                                            })\r\n                                        }}\r\n                                        onEvent3={(value)=>{\r\n                                            // console.log(\"CtoP\",value)\r\n                                            this.setState({\r\n                                              isbn:value\r\n                                            })\r\n                                        }}\r\n                                        onEvent4={(value)=>{\r\n                                            // console.log(\"CtoP\",value)\r\n                                            this.setState({\r\n                                                published_date:value\r\n                                            })\r\n                                        }}\r\n                                        onEvent5={(value)=>{\r\n                                            // console.log(\"CtoP\",value)\r\n                                            this.setState({\r\n                                              description:value\r\n                                            })\r\n                                        }}\r\n                                        onEvent6={(value)=>{\r\n                                            // console.log(\"CtoP\",value)\r\n                                            this.setState({\r\n                                              publisher:value\r\n                                            })\r\n                                        }}\r\n                                        onEvent7={(value)=>{\r\n                                          // console.log(\"CtoP\",value)\r\n                                          this.setState({\r\n                                            current2:value\r\n                                          })\r\n                                      }}></FilmItem>\r\n                                    )\r\n                                }\r\n                            </Space>\r\n                        </div></div>\r\n                    </Card>}\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n            </Space>\r\n            <Divider orientation=\"left\">Analytics</Divider>\r\n            <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex' }}>\r\n            <div className=\"site-card-wrapper\">\r\n                <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    <div id=\"main2\" style={{heigh:\"400px\"}}>\r\n                                    \r\n                    </div>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    {this.state.isShow2&&<div>\r\n                    <h3>Probability</h3>\r\n                    Control:{(12+num01)*number01/10}<br/>\r\n                    UHR:{(13+num01)*number01/10}<br/>\r\n                    Remit:{(11+num01)*number01/10}<br/>\r\n                    Convert:{(20+num01)*number01/10}</div>}\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    <div id=\"main\" style={{heigh:\"400px\"}}>\r\n                                    \r\n                    </div>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n            </Space>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowBookList;",["244","245"],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\CreateBook.js",["246","247"],[],"import React, { Component } from 'react';\r\nimport { Space, Button,Tooltip,Select,Divider,Card, Col, Row } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport styles from \"./styles/personal.module.css\"\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport * as Highcharts from 'highcharts';\r\nconst text1 = <span>prompt text(Model Name)</span>;\r\n    const text2 = <span>prompt text(Treatment strategy?)</span>;\r\n    const text3 = <span>prompt text(Validation)</span>;\r\n    const text4 = <span>prompt text(K?)</span>;\r\nclass CreateBook extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      isbn:'',\r\n      author:0,\r\n      description:'',\r\n      published_date:'',\r\n      publisher:0,\r\n      train:''\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      title: this.state.title,\r\n      isbn: this.state.isbn,\r\n      author: this.state.author,\r\n      description: this.state.description,\r\n      published_date: this.state.published_date,\r\n      publisher: this.state.publisher\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:8082/api/books', data)\r\n      .then(res => {\r\n        this.setState({\r\n          title: '',\r\n          isbn:'',\r\n          author:'',\r\n          description:'',\r\n          published_date:'',\r\n          publisher:''\r\n        })\r\n        this.props.history.push('/');\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error in CreateBook!\");\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"model\">\r\n          <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n          <div className=\"site-card-wrapper\">\r\n              <Row gutter={16}>\r\n              <Col span={7}>\r\n                  <Card bordered={false}>\r\n                  <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n                  <Space size=\"middle\">\r\n                      Model Name:\r\n                      <Tooltip placement=\"bottomLeft\" title={text1}>\r\n                          <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                      </Tooltip>\r\n                        <input\r\n                          type='text'\r\n                          placeholder='Model Name'\r\n                          name='title'\r\n                          className='form-control'\r\n                          value={this.state.title}\r\n                          onChange={this.onChange}\r\n                        />\r\n                  </Space>\r\n                  <Space size=\"middle\">\r\n                      Strategy:\r\n                      <Tooltip placement=\"bottomLeft\" title={text2}>\r\n                          <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                      </Tooltip>\r\n                      <Select\r\n                      defaultValue=\"Early Fusion\"\r\n                      style={{ width: 120 }}\r\n                      // onChange={handleChange}\r\n                      options={[\r\n                          {\r\n                          value: '1',\r\n                          label: 'Early Fusion',\r\n                          },\r\n                          {\r\n                          value: '2',\r\n                          label: 'Late Fusion',\r\n                          }\r\n                      ]}\r\n                      />\r\n                  </Space>\r\n                  </Space>\r\n                  </Card>\r\n              </Col>\r\n              <Col span={8}>\r\n                  <Card bordered={false}>\r\n                  <div className={styles.modelBox} style={{ padding: 20, minHeight: 220,maxWidth:410}}>\r\n                      <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n                          <h1>Model</h1>\r\n                          <input\r\n                            type='text'\r\n                            placeholder='Classifier'\r\n                            name='isbn'\r\n                            className='form-control'\r\n                            value={this.state.isbn}\r\n                            onChange={this.onChange}\r\n                          />\r\n                          <input\r\n                            type='number'\r\n                            placeholder='n_neighbours'\r\n                            name='author'\r\n                            className='form-control'\r\n                            value={this.state.author}\r\n                            onChange={this.onChange}\r\n                          />\r\n                          <input\r\n                            type='text'\r\n                            placeholder='neighbours_type'\r\n                            name='description'\r\n                            className='form-control'\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}\r\n                          />\r\n                          <input\r\n                            type='text'\r\n                            placeholder='publisfeature_weights'\r\n                            name='published_date'\r\n                            className='form-control'\r\n                            value={this.state.published_date}\r\n                            onChange={this.onChange}\r\n                          />\r\n                          <p>voting_type:</p>\r\n                      </Space>\r\n                  </div>\r\n                  </Card>\r\n              </Col>\r\n              <Col span={8}>\r\n                  <Card bordered={false}>\r\n                  <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex',padding: 20 }}>\r\n                      <Space size=\"middle\">\r\n                      Validation:\r\n                          <Tooltip placement=\"bottomLeft\" title={text3}>\r\n                              <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                          </Tooltip>\r\n                          <Select\r\n                          defaultValue=\"K-Fold\"\r\n                          style={{ width: 120 }}\r\n                          // onChange={handleChange}\r\n                          options={[\r\n                              {\r\n                              value: '1',\r\n                              label: 'K-Fold',\r\n                              }\r\n                          ]}\r\n                          />\r\n                      </Space>\r\n                      <Space size=\"middle\">\r\n                          K:\r\n                          <Tooltip placement=\"bottomLeft\" title={text4}>\r\n                              <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                          </Tooltip>\r\n                          <input\r\n                            type='number'\r\n                            placeholder=''\r\n                            name='publisher'\r\n                            className='form-control'\r\n                            value={this.state.publisher}\r\n                            onChange={this.onChange}\r\n                          />\r\n                      </Space>\r\n                      <form noValidate onSubmit={this.onSubmit}>\r\n                      <Space size=\"middle\">\r\n                          <input\r\n                              type=\"submit\"\r\n                              value=\"submit\"\r\n                              className=\"btn btn-outline-warning btn-block mt-4\"\r\n                          />\r\n                      </Space>\r\n                      </form>\r\n                      <Button type=\"primary\" onClick={()=>{\r\n                                    // this.setState({\r\n                                    //   train:parseInt(this.state.author)\r\n                                    // })\r\n                                    var num1 = parseInt(this.state.author);\r\n                                    var num2 = parseInt(this.state.publisher);\r\n                                    Highcharts.chart('main', {\r\n                                      chart: {\r\n                                        type: 'bar'\r\n                                      },\r\n                                      title: {\r\n                                        text: 'Top Features'\r\n                                      },\r\n                                      xAxis: {\r\n                                        categories: ['caarms_08', 'panss_neg', 'IDREK', 'hippocamp', 'smoking_his','familial_his']\r\n                                      },\r\n                                      yAxis: {\r\n                                        min: 0,\r\n                                        title: {\r\n                                          text: ''\r\n                                        }\r\n                                      },\r\n                                      legend: {\r\n                                        reversed: true\r\n                                      },\r\n                                      plotOptions: {\r\n                                        series: {\r\n                                          stacking: 'normal',\r\n                                          dataLabels: {\r\n                                            enabled: true\r\n                                          }\r\n                                        }\r\n                                      },\r\n                                      series: [\r\n                                      {\r\n                                        name: 'Importance',\r\n                                        data: [90+num1+num2, 80+num1+num2, 70+num1+num2, 50+num1+num2, 40+num1+num2,20+num1+num2]\r\n                                      }]\r\n                                    });\r\n                                    Highcharts.chart('main2', {\r\n                                      chart: {\r\n                                        type: 'bar'\r\n                                      },\r\n                                      title: {\r\n                                        text: 'Metrics'\r\n                                      },\r\n                                      xAxis: {\r\n                                        categories: ['Accuracy', 'MCC', 'AUC', 'F1 Score']\r\n                                      },\r\n                                      yAxis: {\r\n                                        min: 0,\r\n                                        title: {\r\n                                          text: ''\r\n                                        }\r\n                                      },\r\n                                      legend: {\r\n                                        reversed: true\r\n                                      },\r\n                                      plotOptions: {\r\n                                        series: {\r\n                                          stacking: 'normal',\r\n                                          dataLabels: {\r\n                                            enabled: true\r\n                                          }\r\n                                        }\r\n                                      },\r\n                                      series: [\r\n                                      {\r\n                                        name: '% ',\r\n                                        data: [90-num1-num2, 80-num1-num2, 80-num1-num2, 90-num1-num2]\r\n                                      }]\r\n                                    });\r\n                                    function getPointCategoryName(point, dimension) {\r\n                                      var series = point.series,\r\n                                          isY = dimension === 'y',\r\n                                          axis = series[isY ? 'yAxis' : 'xAxis'];\r\n                                      return axis.categories[point[isY ? 'y' : 'x']];\r\n                                  }\r\n                                  require ( 'highcharts/modules/map' ) ( Highcharts ) ;\r\n                                  Highcharts.chart('main3', {\r\n                                  \r\n                                      chart: {\r\n                                          type: 'heatmap',\r\n                                          marginTop: 40,\r\n                                          marginBottom: 80,\r\n                                          plotBorderWidth: 1\r\n                                      },\r\n                                  \r\n                                  \r\n                                      title: {\r\n                                          text: 'Confusion Matrix'\r\n                                      },\r\n                                  \r\n                                      xAxis: {\r\n                                          categories: ['Control', 'UHR', 'Remit', 'Convert']\r\n                                      },\r\n                                  \r\n                                      yAxis: {\r\n                                          categories: ['Control', 'UHR', 'Remit', 'Convert'],\r\n                                          title: null,\r\n                                          reversed: true\r\n                                      },\r\n                                  \r\n                                      accessibility: {\r\n                                          point: {\r\n                                              descriptionFormatter: function (point) {\r\n                                                  var ix = point.index + 1,\r\n                                                      xName = getPointCategoryName(point, 'x'),\r\n                                                      yName = getPointCategoryName(point, 'y'),\r\n                                                      val = point.value;\r\n                                                  return ix + '. ' + xName + ' sales ' + yName + ', ' + val + '.';\r\n                                              }\r\n                                          }\r\n                                      },\r\n                                  \r\n                                      colorAxis: {\r\n                                          min: 0,\r\n                                          minColor: '#FFFFFF',\r\n                                          maxColor: Highcharts.getOptions().colors[0]\r\n                                      },\r\n                                  \r\n                                      legend: {\r\n                                          align: 'right',\r\n                                          layout: 'vertical',\r\n                                          margin: 0,\r\n                                          verticalAlign: 'top',\r\n                                          y: 25,\r\n                                          symbolHeight: 280\r\n                                      },\r\n                                  \r\n                                      tooltip: {\r\n                                          formatter: function () {\r\n                                              return '<b>' + getPointCategoryName(this.point, 'x') + '</b> sold <br><b>' +\r\n                                                  this.point.value + '</b> items on <br><b>' + getPointCategoryName(this.point, 'y') + '</b>';\r\n                                          }\r\n                                      },\r\n                                  \r\n                                      series: [{\r\n                                          name: 'Sales per employee',\r\n                                          borderWidth: 1,\r\n                                          data: [[0, 0, 61+num1+num2], [0, 1, 3+num1+num2], [0, 2, 8+num1+num2], [0, 3, 1+num1+num2], \r\n                                          [1, 0, 6+num1+num2],[1, 1, 32+num1+num2], [1, 2, 1+num1+num2], [1, 3, 5+num1+num2], \r\n                                          [2, 0, 2+num1+num2], [2, 1, 9+num1+num2], [2, 2, 31+num1+num2], [2, 3, 2+num1+num2], \r\n                                          [3, 0, 6+num1+num2], [3, 1, 0+num1+num2], [3, 2, 12+num1+num2], [3, 3, 15+num1+num2]],\r\n                                          dataLabels: {\r\n                                              enabled: true,\r\n                                              color: '#000000'\r\n                                          }\r\n                                      }],\r\n                                  \r\n                                      responsive: {\r\n                                          rules: [{\r\n                                              condition: {\r\n                                                  maxWidth: 500\r\n                                              },\r\n                                              chartOptions: {\r\n                                                  yAxis: {\r\n                                                      labels: {\r\n                                                          formatter: function () {\r\n                                                              return this.value.charAt(0);\r\n                                                          }\r\n                                                      }\r\n                                                  }\r\n                                              }\r\n                                          }]\r\n                                      }\r\n                                  \r\n                                  });\r\n                                }}>Train</Button>\r\n                  </Space>\r\n                  </Card>\r\n              </Col>\r\n              </Row>\r\n          </div>\r\n          </Space>\r\n          <Divider orientation=\"left\">Analytics</Divider>\r\n          <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex' }}>\r\n          <div className=\"site-card-wrapper\">\r\n              <Row gutter={16}>\r\n              <Col span={8}>\r\n                  <Card bordered={false}>\r\n                  <div id=\"main2\" style={{heigh:\"400px\"}}></div>\r\n                  </Card>\r\n              </Col>\r\n              <Col span={8}>\r\n                  <Card bordered={false}>\r\n                  <div id=\"main3\" style={{heigh:\"400px\"}}></div>\r\n                  </Card>\r\n              </Col>\r\n              <Col span={8}>\r\n                  <Card bordered={false}>\r\n                  <div id=\"main\" style={{heigh:\"400px\"}}></div>\r\n                  </Card>\r\n              </Col>\r\n              </Row>\r\n          </div>\r\n          </Space>\r\n      </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default CreateBook;","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\UpdateBookInfo.js",["248"],[],"import withRouter from './withRouter';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Input, Space, Button,Tooltip,Select,Divider,Card, Col, Row } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport styles from \"./styles/personal.module.css\"\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport * as Highcharts from 'highcharts';\r\nconst text1 = <span>prompt text(Model Name)</span>;\r\nconst text2 = <span>prompt text(Treatment strategy?)</span>;\r\nconst text3 = <span>prompt text(Validation)</span>;\r\nconst text4 = <span>prompt text(K?)</span>;\r\n\r\nclass UpdateBookInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      book: {},\r\n      title: '',\r\n      isbn: '',\r\n      author: '',\r\n      description: '',\r\n      published_date: '',\r\n      publisher: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"Print id: \" + this.props.match.params.id);\r\n    axios\r\n      .get('http://localhost:8082/api/books/'+this.props.params.id)\r\n      .then(res => {\r\n        // this.setState({...this.state, book: res.data})\r\n        this.setState({\r\n          book: res.data,\r\n          title: res.data.title,\r\n          isbn: res.data.isbn,\r\n          author: res.data.author,\r\n          description: res.data.description,\r\n          published_date: res.data.published_date,\r\n          publisher: res.data.publisher\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error from UpdateBookInfo\");\r\n      })\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      title: this.state.title,\r\n      isbn: this.state.isbn,\r\n      author: this.state.author,\r\n      description: this.state.description,\r\n      published_date: this.state.published_date,\r\n      publisher: this.state.publisher\r\n    };\r\n\r\n    axios\r\n      .put('http://localhost:8082/api/books/'+this.props.params.id, data)\r\n      .then(res => {\r\n        this.props.history.push('/show-book/'+this.props.params.id);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error in UpdateBookInfo!\");\r\n      })\r\n  };\r\n\r\n  onDeleteClick (id) {\r\n    axios\r\n      .delete('http://localhost:8082/api/books/'+id)\r\n      .then(res => {\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error form ShowBookDetails_deleteClick\");\r\n      })\r\n  };\r\n\r\n\r\n  render() {\r\n    const book = this.state.book;\r\n    return(\r\n      <div className=\"model\">\r\n          <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n          <div className=\"site-card-wrapper\">\r\n              <Row gutter={16}>\r\n              <Col span={7}>\r\n                  <Card bordered={false}>\r\n                  <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n                  <Space size=\"middle\">\r\n                      Model Name:\r\n                      <Tooltip placement=\"bottomLeft\" title={text1}>\r\n                          <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                      </Tooltip>\r\n                        <input\r\n                          type='text'\r\n                          placeholder='Model Name'\r\n                          name='title'\r\n                          className='form-control'\r\n                          value={this.state.title}\r\n                          onChange={this.onChange}\r\n                        />\r\n                  </Space>\r\n                  <Space size=\"middle\">\r\n                      Strategy:\r\n                      <Tooltip placement=\"bottomLeft\" title={text2}>\r\n                          <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                      </Tooltip>\r\n                      <Select\r\n                      defaultValue=\"Early Fusion\"\r\n                      style={{ width: 120 }}\r\n                      // onChange={handleChange}\r\n                      options={[\r\n                          {\r\n                          value: '1',\r\n                          label: 'Early Fusion',\r\n                          },\r\n                          {\r\n                          value: '2',\r\n                          label: 'Late Fusion',\r\n                          }\r\n                      ]}\r\n                      />\r\n                  </Space>\r\n                  </Space>\r\n                  </Card>\r\n              </Col>\r\n              <Col span={8}>\r\n                  <Card bordered={false}>\r\n                  <div className={styles.modelBox} style={{ padding: 20, minHeight: 220,maxWidth:410}}>\r\n                      <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n                          <h1>Model</h1>\r\n                          <input\r\n                            type='text'\r\n                            placeholder='Classifier'\r\n                            name='isbn'\r\n                            className='form-control'\r\n                            value={this.state.isbn}\r\n                            onChange={this.onChange}\r\n                          />\r\n                          <input\r\n                            type='number'\r\n                            placeholder='n_neighbours'\r\n                            name='author'\r\n                            className='form-control'\r\n                            value={this.state.author}\r\n                            onChange={this.onChange}\r\n                          />\r\n                          <input\r\n                            type='text'\r\n                            placeholder='neighbours_type'\r\n                            name='description'\r\n                            className='form-control'\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}\r\n                          />\r\n                          <input\r\n                            type='text'\r\n                            placeholder='publisfeature_weights'\r\n                            name='published_date'\r\n                            className='form-control'\r\n                            value={this.state.published_date}\r\n                            onChange={this.onChange}\r\n                          />\r\n                          <p>voting_type:</p>\r\n                      </Space>\r\n                  </div>\r\n                  </Card>\r\n              </Col>\r\n              <Col span={8}>\r\n                  <Card bordered={false}>\r\n                  <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex',padding: 20 }}>\r\n                      <Space size=\"middle\">\r\n                      Validation:\r\n                          <Tooltip placement=\"bottomLeft\" title={text3}>\r\n                              <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                          </Tooltip>\r\n                          <Select\r\n                          defaultValue=\"K-Fold\"\r\n                          style={{ width: 120 }}\r\n                          // onChange={handleChange}\r\n                          options={[\r\n                              {\r\n                              value: '1',\r\n                              label: 'K-Fold',\r\n                              }\r\n                          ]}\r\n                          />\r\n                      </Space>\r\n                      <Space size=\"middle\">\r\n                          K:\r\n                          <Tooltip placement=\"bottomLeft\" title={text4}>\r\n                              <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                          </Tooltip>\r\n                          <input\r\n                            type='number'\r\n                            placeholder=''\r\n                            name='publisher'\r\n                            className='form-control'\r\n                            value={this.state.publisher}\r\n                            onChange={this.onChange}\r\n                          />\r\n                      </Space>\r\n                      <form noValidate onSubmit={this.onSubmit}>\r\n                      <Space size=\"middle\">\r\n                          {/* <Button type=\"primary\">Save</Button>\r\n                          // <Button type=\"primary\">Train</Button> */}\r\n                          <button type=\"submit\" className=\"btn btn-outline-info btn-lg btn-block\">Update</button>\r\n                          <button type=\"button\" className=\"btn btn-outline-danger btn-lg btn-block\" onClick={this.onDeleteClick.bind(this,book._id)}>\r\n                            <Link to=\"/home/model\" style={{color:\"red\"}}>Delete</Link></button>\r\n                      </Space>\r\n                      </form>\r\n                      <Button type=\"primary\" onClick={()=>{\r\n                                    // this.setState({\r\n                                    //   train:parseInt(this.state.author)\r\n                                    // })\r\n                                    var num1 = parseInt(this.state.author);\r\n                                    var num2 = parseInt(this.state.publisher);\r\n                                    Highcharts.chart('main', {\r\n                                      chart: {\r\n                                        type: 'bar'\r\n                                      },\r\n                                      title: {\r\n                                        text: 'Top Features'\r\n                                      },\r\n                                      xAxis: {\r\n                                        categories: ['caarms_08', 'panss_neg', 'IDREK', 'hippocamp', 'smoking_his','familial_his']\r\n                                      },\r\n                                      yAxis: {\r\n                                        min: 0,\r\n                                        title: {\r\n                                          text: ''\r\n                                        }\r\n                                      },\r\n                                      legend: {\r\n                                        reversed: true\r\n                                      },\r\n                                      plotOptions: {\r\n                                        series: {\r\n                                          stacking: 'normal',\r\n                                          dataLabels: {\r\n                                            enabled: true\r\n                                          }\r\n                                        }\r\n                                      },\r\n                                      series: [\r\n                                      {\r\n                                        name: 'Importance',\r\n                                        data: [90+num1+num2, 80+num1+num2, 70+num1+num2, 50+num1+num2, 40+num1+num2,20+num1+num2]\r\n                                      }]\r\n                                    });\r\n                                    Highcharts.chart('main2', {\r\n                                      chart: {\r\n                                        type: 'bar'\r\n                                      },\r\n                                      title: {\r\n                                        text: 'Metrics'\r\n                                      },\r\n                                      xAxis: {\r\n                                        categories: ['Accuracy', 'MCC', 'AUC', 'F1 Score']\r\n                                      },\r\n                                      yAxis: {\r\n                                        min: 0,\r\n                                        title: {\r\n                                          text: ''\r\n                                        }\r\n                                      },\r\n                                      legend: {\r\n                                        reversed: true\r\n                                      },\r\n                                      plotOptions: {\r\n                                        series: {\r\n                                          stacking: 'normal',\r\n                                          dataLabels: {\r\n                                            enabled: true\r\n                                          }\r\n                                        }\r\n                                      },\r\n                                      series: [\r\n                                      {\r\n                                        name: '% ',\r\n                                        data: [90-num1-num2, 80-num1-num2, 80-num1-num2, 90-num1-num2]\r\n                                      }]\r\n                                    });\r\n                                    function getPointCategoryName(point, dimension) {\r\n                                      var series = point.series,\r\n                                          isY = dimension === 'y',\r\n                                          axis = series[isY ? 'yAxis' : 'xAxis'];\r\n                                      return axis.categories[point[isY ? 'y' : 'x']];\r\n                                  }\r\n                                  require ( 'highcharts/modules/map' ) ( Highcharts ) ;\r\n                                  Highcharts.chart('main3', {\r\n                                  \r\n                                      chart: {\r\n                                          type: 'heatmap',\r\n                                          marginTop: 40,\r\n                                          marginBottom: 80,\r\n                                          plotBorderWidth: 1\r\n                                      },\r\n                                  \r\n                                  \r\n                                      title: {\r\n                                          text: 'Confusion Matrix'\r\n                                      },\r\n                                  \r\n                                      xAxis: {\r\n                                          categories: ['Control', 'UHR', 'Remit', 'Convert']\r\n                                      },\r\n                                  \r\n                                      yAxis: {\r\n                                          categories: ['Control', 'UHR', 'Remit', 'Convert'],\r\n                                          title: null,\r\n                                          reversed: true\r\n                                      },\r\n                                  \r\n                                      accessibility: {\r\n                                          point: {\r\n                                              descriptionFormatter: function (point) {\r\n                                                  var ix = point.index + 1,\r\n                                                      xName = getPointCategoryName(point, 'x'),\r\n                                                      yName = getPointCategoryName(point, 'y'),\r\n                                                      val = point.value;\r\n                                                  return ix + '. ' + xName + ' sales ' + yName + ', ' + val + '.';\r\n                                              }\r\n                                          }\r\n                                      },\r\n                                  \r\n                                      colorAxis: {\r\n                                          min: 0,\r\n                                          minColor: '#FFFFFF',\r\n                                          maxColor: Highcharts.getOptions().colors[0]\r\n                                      },\r\n                                  \r\n                                      legend: {\r\n                                          align: 'right',\r\n                                          layout: 'vertical',\r\n                                          margin: 0,\r\n                                          verticalAlign: 'top',\r\n                                          y: 25,\r\n                                          symbolHeight: 280\r\n                                      },\r\n                                  \r\n                                      tooltip: {\r\n                                          formatter: function () {\r\n                                              return '<b>' + getPointCategoryName(this.point, 'x') + '</b> sold <br><b>' +\r\n                                                  this.point.value + '</b> items on <br><b>' + getPointCategoryName(this.point, 'y') + '</b>';\r\n                                          }\r\n                                      },\r\n                                  \r\n                                      series: [{\r\n                                          name: 'Sales per employee',\r\n                                          borderWidth: 1,\r\n                                          data: [[0, 0, 61+num1+num2], [0, 1, 3+num1+num2], [0, 2, 8+num1+num2], [0, 3, 1+num1+num2], \r\n                                          [1, 0, 6+num1+num2],[1, 1, 32+num1+num2], [1, 2, 1+num1+num2], [1, 3, 5+num1+num2], \r\n                                          [2, 0, 2+num1+num2], [2, 1, 9+num1+num2], [2, 2, 31+num1+num2], [2, 3, 2+num1+num2], \r\n                                          [3, 0, 6+num1+num2], [3, 1, 0+num1+num2], [3, 2, 12+num1+num2], [3, 3, 15+num1+num2]],\r\n                                          dataLabels: {\r\n                                              enabled: true,\r\n                                              color: '#000000'\r\n                                          }\r\n                                      }],\r\n                                  \r\n                                      responsive: {\r\n                                          rules: [{\r\n                                              condition: {\r\n                                                  maxWidth: 500\r\n                                              },\r\n                                              chartOptions: {\r\n                                                  yAxis: {\r\n                                                      labels: {\r\n                                                          formatter: function () {\r\n                                                              return this.value.charAt(0);\r\n                                                          }\r\n                                                      }\r\n                                                  }\r\n                                              }\r\n                                          }]\r\n                                      }\r\n                                  \r\n                                  });\r\n                                }}>Train</Button>\r\n                  </Space>\r\n                  </Card>\r\n              </Col>\r\n              </Row>\r\n          </div>\r\n          </Space>\r\n          <Divider orientation=\"left\">Analytics</Divider>\r\n          <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex' }}>\r\n          <div className=\"site-card-wrapper\">\r\n              <Row gutter={16}>\r\n              <Col span={8}>\r\n                  <Card bordered={false}>\r\n                  <div id=\"main2\" style={{heigh:\"400px\"}}></div>\r\n                  </Card>\r\n              </Col>\r\n              <Col span={8}>\r\n                  <Card bordered={false}>\r\n                  <div id=\"main3\" style={{heigh:\"400px\"}}></div>\r\n                  </Card>\r\n              </Col>\r\n              <Col span={8}>\r\n                  <Card bordered={false}>\r\n                  <div id=\"main\" style={{heigh:\"400px\"}}></div>\r\n                  </Card>\r\n              </Col>\r\n              </Row>\r\n          </div>\r\n          </Space>\r\n      </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default withRouter(UpdateBookInfo);","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\Model.js",["249","250","251","252","253","254","255","256","257","258","259","260","261","262"],[],"import React, { Component } from 'react';\r\n// import '../App.css';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport BookCard from './BookCard';\r\n\r\nimport { Input, Space, Button,Tooltip,Select,Divider,Card, Col, Row } from 'antd';\r\nimport { RedoOutlined,QuestionCircleOutlined } from '@ant-design/icons';\r\nimport styles from \"./styles/personal.module.css\";\r\n\r\nimport * as Highcharts from 'highcharts';\r\nconst text = <span>prompt text(Treatment strategy?)</span>;\r\n\r\nclass ShowBookList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      backbook:[]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get('http://localhost:8082/api/books')\r\n      .then(res => {\r\n        this.setState({\r\n          books: res.data,\r\n          backbook: res.data\r\n        })\r\n      })\r\n      .catch(err =>{\r\n        console.log('Error from ShowBookList');\r\n      })\r\n  }0;\r\n  handleInput = (event) => {\r\n    console.log(\"input\",event.target.value)\r\n\r\n    var newList = this.state.backbook.filter(item=>\r\n       (item.title.toUpperCase().includes(event.target.value.toUpperCase())))\r\n\r\n    /* console.log(newList) */\r\n\r\n    this.setState({\r\n      books:newList\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const books = this.state.books;\r\n    console.log(\"PrintBook: \" + books);\r\n    let bookList;\r\n\r\n    if(!books) {\r\n      bookList = \"there is no book record!\";\r\n    } else {\r\n      bookList = books.map((book, k) =>\r\n        <BookCard book={book} key={k} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div >\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <br />\r\n              <h2 className=\"display-4 text-center\">Model List</h2>\r\n            </div>\r\n\r\n            <div className=\"col-md-11\">\r\n              <Link to=\"/home/create-book\" className=\"btn btn-outline-warning float-right\">\r\n                + Add New Model\r\n              </Link>\r\n              <br />\r\n              <br />\r\n              <hr />\r\n            </div>\r\n          </div>\r\n          <div >\r\n           <input className='form-control' onInput={this.handleInput} onChange={(evt)=>{\r\n              this.setState({\r\n                text:evt.target.value\r\n              }) \r\n            }}/>\r\n          </div>\r\n          <div className=\"list\">\r\n            {bookList}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowBookList;","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\Home.js",["263","264","265","266"],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\BookCard.js",[],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\withRouter.js",[],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\DataT.js",["267"],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\DataTypeCard.js",[],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\CreateData.js",["268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],[],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nclass CreateData extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        Name: '',\r\n        Samples:'',\r\n        Features:'',\r\n        Timepoint:''\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      Name: this.state.Name,\r\n      Samples: this.state.Samples,\r\n      Features: this.state.Features,\r\n      Timepoint: this.state.Timepoint\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:8082/api/datas', data)\r\n      .then(res => {\r\n        this.setState({\r\n          Name: '',\r\n          Samples:'',\r\n          Features:'',\r\n          Timepoint:''\r\n        })\r\n        this.props.history.push('/');\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error in Createdata!\");\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n          <div className=\"Createdata\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                  <br />\r\n                  <Link to=\"/home/datat \" className=\"btn btn-outline-warning float-left\">\r\n                      Show data List\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-8 m-auto\">\r\n                  <h1 className=\"display-4 text-center\">Add data</h1>\r\n                  <p className=\"lead text-center\">\r\n                      Create new data\r\n                  </p>\r\n    \r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        placeholder='Name of the data'\r\n                        name='Name'\r\n                        className='form-control'\r\n                        value={this.state.Name}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n    \r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        placeholder='Samples'\r\n                        name='Samples'\r\n                        className='form-control'\r\n                        value={this.state.Samples}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n    \r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        placeholder='Features'\r\n                        name='Features'\r\n                        className='form-control'\r\n                        value={this.state.Features}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n    \r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        placeholder='Describe this data'\r\n                        name='Timepoint'\r\n                        className='form-control'\r\n                        value={this.state.Timepoint}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value={\"submit\"}\r\n                        className=\"btn btn-outline-warning btn-block mt-4\"\r\n                    />\r\n                  </form>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateData;","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\UpdateDataInfo.js",["284","285","286","287","288","289","290","291"],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\DatadetailCard.js",[],[],"D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\CreateDataDetail.js",["292","293","294","295","296"],[],"import React, { Component } from 'react';\r\nimport withRouter from './withRouter';\r\nimport axios from 'axios';\r\nimport { Space, Button,Tooltip,Card, Col, Row } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport styles from \"./styles/personal.module.css\";\r\nimport * as Highcharts from 'highcharts';\r\nconst text1 = <span>prompt text(Patient_ID)</span>;\r\nconst text2 = <span>prompt text(Time)</span>;\r\nconst text3 = <span>prompt text(Feature)</span>;\r\n\r\nclass Data extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name: '',\r\n      ID: '',\r\n      TimeColumn:'',\r\n      Numerical:'',\r\n      Categorical:'',\r\n      Text:'',\r\n      Feature:'',\r\n      Distinct:'',\r\n      Imputed:'',\r\n      Mean:'',\r\n      Maximun:'',\r\n      Minimun:'',\r\n    };\r\n  }\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      Name: this.props.Name,\r\n      ID: this.state.ID,\r\n      TimeColumn:this.state.TimeColumn,\r\n      Numerical:this.state.Numerical,\r\n      Categorical:this.state.Categorical,\r\n      Text:this.state.Text,\r\n      Feature:this.state.Feature,\r\n      Distinct:this.state.Distinct,\r\n      Imputed:this.state.Imputed,\r\n      Mean:this.state.Mean,\r\n      Maximun:this.state.Maximun,\r\n      Minimun:this.state.Minimun\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:8082/api/articles', data)\r\n      .then(res => {\r\n        this.setState({\r\n            ID: '',\r\n            TimeColumn:'',\r\n            Numerical:'',\r\n            Categorical:'',\r\n            Text:'',\r\n            Feature:'',\r\n            Distinct:'',\r\n            Imputed:'',\r\n            Mean:'',\r\n            Maximun:'',\r\n            Minimun:'',\r\n        })\r\n        this.props.history.push('/');\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error in Createdata!\");\r\n      })\r\n\r\n      window.location.reload();\r\n  };\r\n\r\n  handleChange1 = (value) => {\r\n    console.log(`selected ${value}`);\r\n    this.setState({\r\n        TimeColumn:value\r\n    })\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div className=\"data\">\r\n        <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n            <Space size=\"middle\" className={styles.DBBox}>\r\n            </Space>\r\n            <div className=\"site-card-wrapper\">\r\n            <h3>{this.props.Name}</h3>\r\n                <Row gutter={16}>\r\n                <Col span={9}>\r\n                    <Card bordered={false}>\r\n                    <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n                    <Space size=\"middle\">\r\n                        ID Column:\r\n                        <Tooltip placement=\"bottomLeft\" title={text1}>\r\n                            <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                        </Tooltip>\r\n                        <input\r\n                          type='text'\r\n                          placeholder='Patient_ID'\r\n                          name='ID'\r\n                          className='form-control'\r\n                          value={this.state.ID}\r\n                          onChange={this.onChange}\r\n                        />\r\n                    </Space>\r\n                    <Space size=\"middle\">\r\n                        Time Column(Optional):\r\n                        <Tooltip placement=\"bottomLeft\" title={text2}>\r\n                            <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                        </Tooltip>\r\n                        <input\r\n                          type='text'\r\n                          placeholder='TimeColumn'\r\n                          name='TimeColumn'\r\n                          className='form-control'\r\n                          value={this.state.TimeColumn}\r\n                          onChange={this.onChange}\r\n                        />\r\n                    </Space>\r\n                    </Space>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    <div className={styles.DVBox} style={{ padding: 2, minHeight: 120,maxWidth:410}}>\r\n                        <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n                            <h1>Variable Types</h1>\r\n                            <input\r\n                            type='number'\r\n                            placeholder='Numerical'\r\n                            name='Numerical'\r\n                            className='form-control'\r\n                            value={this.state.Numerical}\r\n                            onChange={this.onChange}\r\n                          />\r\n                            <input\r\n                            type='number'\r\n                            placeholder='Categorical'\r\n                            name='Categorical'\r\n                            className='form-control'\r\n                            value={this.state.Categorical}\r\n                            onChange={this.onChange}\r\n                          />\r\n                            <input\r\n                            type='number'\r\n                            placeholder='Text'\r\n                            name='Text'\r\n                            className='form-control'\r\n                            value={this.state.Text}\r\n                            onChange={this.onChange}\r\n                          />\r\n                        </Space>\r\n                    </div>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n        </Space>\r\n        <div className={styles.DVBox} style={{ padding: 20}}>\r\n            <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n            <div className=\"site-card-wrapper\">\r\n                <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    <Space size=\"middle\">\r\n                        Choose Feature:\r\n                        <Tooltip placement=\"bottomLeft\" title={text3}>\r\n                            <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                        </Tooltip>\r\n                        <input\r\n                            type='text'\r\n                            placeholder='Feature'\r\n                            name='Feature'\r\n                            className='form-control'\r\n                            value={this.state.Feature}\r\n                            onChange={this.onChange}\r\n                          /></Space>\r\n                          <Space size=\"middle\">\r\n                        <Button type=\"primary\" onClick={()=>{\r\n                                    var num1 = parseInt(this.state.Numerical);\r\n                                    var num2 = parseInt(this.state.Categorical);\r\n                                    Highcharts.chart('main01', {\r\n                                            title: {\r\n                                              text: this.state.Feature\r\n                                          },\r\n                                      \r\n                                          subtitle: {\r\n                                              text: ''\r\n                                          },\r\n                                      \r\n                                          yAxis: {\r\n                                              title: {\r\n                                                  text: ''\r\n                                              }\r\n                                          },\r\n                                      \r\n                                          xAxis: {\r\n                                            categories: ['Timepoint 1', 'Timepoint 2', 'Timepoint 3', 'Timepoint 4'],\r\n                                              accessibility: {\r\n                                                  rangeDescription: ''\r\n                                              }\r\n                                          },\r\n                                      \r\n                                          legend: {\r\n                                              layout: 'vertical',\r\n                                              align: 'right',\r\n                                              verticalAlign: 'middle'\r\n                                          },\r\n                                      \r\n                                          plotOptions: {\r\n                                              series: {\r\n                                                  label: {\r\n                                                      connectorAllowed: false\r\n                                                  }\r\n                                              }\r\n                                          },\r\n                                      \r\n                                          series: [{\r\n                                              name: 'Control',\r\n                                              data: [4-num1+num2, 2-num1+num2, 4-num1+num2, 5-num1+num2]\r\n                                          }, {\r\n                                              name: 'UHR',\r\n                                              data: [2-num1+num2,2-num1+num2,3-num1+num2,1-num1+num2]\r\n                                          }, {\r\n                                              name: 'Remit',\r\n                                              data: [2-num1+num2,4-num1+num2,2-num1+num2,3-num1+num2]\r\n                                          }, {\r\n                                              name: 'Convert',\r\n                                              data: [1-num1+num2,1-num1+num2,5-num1+num2,4-num1+num2]\r\n                                          }],\r\n                                      \r\n                                          responsive: {\r\n                                              rules: [{\r\n                                                  condition: {\r\n                                                      maxWidth: 500\r\n                                                  },\r\n                                                  chartOptions: {\r\n                                                      legend: {\r\n                                                          layout: 'horizontal',\r\n                                                          align: 'center',\r\n                                                          verticalAlign: 'bottom'\r\n                                                      }\r\n                                                  }\r\n                                              }]\r\n                                          }\r\n                                        })\r\n                                        ;\r\n                                }}>Train</Button></Space>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                <Space size=\"middle\">\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"submit\"\r\n                                        className=\"btn btn-outline-warning btn-block mt-4\"\r\n                                    />\r\n                                </Space>\r\n                                </form>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    Distinct:<input\r\n                            type='number    '\r\n                            placeholder='Distinct'\r\n                            name='Distinct'\r\n                            className='form-control'\r\n                            value={this.state.Distinct}\r\n                            onChange={this.onChange}\r\n                          />\r\n                    Imputed:<input\r\n                            type='number'\r\n                            placeholder='Imputed'\r\n                            name='Imputed'\r\n                            className='form-control'\r\n                            value={this.state.Imputed}\r\n                            onChange={this.onChange}\r\n                          />\r\n                    Mean:<input\r\n                            type='number'\r\n                            placeholder='Mean'\r\n                            name='Mean'\r\n                            className='form-control'\r\n                            value={this.state.Mean}\r\n                            onChange={this.onChange}\r\n                          />\r\n                    Maximun:<input\r\n                            type='number'\r\n                            placeholder='Maximun'\r\n                            name='Maximun'\r\n                            className='form-control'\r\n                            value={this.state.Maximun}\r\n                            onChange={this.onChange}\r\n                          />\r\n                    Minimun:<input\r\n                            type='number'\r\n                            placeholder='Minimun'\r\n                            name='Minimun'\r\n                            className='form-control'\r\n                            value={this.state.Minimun}\r\n                            onChange={this.onChange}\r\n                          />\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    <div id=\"main01\" style={{heigh:\"400px\"}}>\r\n                                    \r\n                    </div>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n            </Space>\r\n        </div>        \r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default withRouter(Data);","D:\\AUT\\702\\personal model\\machine-learning-tool\\mern_a_to_z_client\\src\\components\\UpdateDataDetail.js",["297","298","299","300"],[],"import React, { Component } from 'react';\r\nimport withRouter from './withRouter';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Input, Space, Button,Tooltip,Select,Divider,Card, Col, Row } from 'antd';\r\nimport { RedoOutlined,QuestionCircleOutlined } from '@ant-design/icons';\r\nimport styles from \"./styles/personal.module.css\";\r\nimport * as Highcharts from 'highcharts';\r\nconst text1 = <span>prompt text(Patient_ID)</span>;\r\nconst text2 = <span>prompt text(Time)</span>;\r\nconst text3 = <span>prompt text(Feature)</span>;\r\n\r\nclass Data extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Patient: {},\r\n      Name: '',\r\n      ID: '',\r\n      TimeColumn:'',\r\n      Numerical:'',\r\n      Categorical:'',\r\n      Text:'',\r\n      Feature:'',\r\n      Distinct:'',\r\n      Imputed:'',\r\n      Mean:'',\r\n      Maximun:'',\r\n      Minimun:'',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // console.log(\"Print id: \" + this.props.match.params.id);\r\n    axios\r\n      .get('http://localhost:8082/api/articles/'+this.props.params.id)\r\n      .then(res => {\r\n        // this.setState({...this.state, book: res.data})\r\n        this.setState({\r\n            Patient: res.data,\r\n            ID: res.data.ID,\r\n            TimeColumn: res.data.TimeColumn,\r\n          Numerical: res.data.Numerical,\r\n          Categorical: res.data.Categorical,\r\n          Text: res.data.Text,\r\n          Feature: res.data.Feature,\r\n          Distinct: res.data.Distinct,\r\n          Imputed: res.data.Imputed,\r\n          Mean: res.data.Mean,\r\n          Maximun: res.data.Maximun,\r\n          Minimun: res.data.Minimun,\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error from UpdateBookInfo\");\r\n      })\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      ID: this.state.ID,\r\n      TimeColumn:this.state.TimeColumn,\r\n      Numerical:this.state.Numerical,\r\n      Categorical:this.state.Categorical,\r\n      Text:this.state.Text,\r\n      Feature:this.state.Feature,\r\n      Distinct:this.state.Distinct,\r\n      Imputed:this.state.Imputed,\r\n      Mean:this.state.Mean,\r\n      Maximun:this.state.Maximun,\r\n      Minimun:this.state.Minimun\r\n    };\r\n\r\n      axios\r\n      .put('http://localhost:8082/api/articles/'+this.props.params.id, data)\r\n      .then(res => {\r\n        this.props.history.push('/edit-data/'+this.props.params.id);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error in UpdateBookInfo!\");\r\n      })\r\n  };\r\n  \r\n\r\n  onDeleteClick (id) {\r\n    axios\r\n      .delete('http://localhost:8082/api/articles/'+id)\r\n      .then(res => {\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error form ShowBookDetails_deleteClick\");\r\n      })\r\n  };\r\n\r\n  handleChange1 = (value) => {\r\n    console.log(`selected ${value}`);\r\n    this.setState({\r\n        TimeColumn:value\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const Patient = this.state.Patient;\r\n    return (\r\n        <div className=\"data\">\r\n        <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n            <Space size=\"middle\" className={styles.DBBox}>\r\n            </Space>\r\n            <div className=\"site-card-wrapper\">\r\n            <h3>{this.props.Name}</h3>\r\n                <Row gutter={16}>\r\n                <Col span={9}>\r\n                    <Card bordered={false}>\r\n                    <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n                    <Space size=\"middle\">\r\n                        ID Column:\r\n                        <Tooltip placement=\"bottomLeft\" title={text1}>\r\n                            <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                        </Tooltip>\r\n                        <input\r\n                          type='text'\r\n                          placeholder='Patient_ID'\r\n                          name='ID'\r\n                          className='form-control'\r\n                          value={this.state.ID}\r\n                          onChange={this.onChange}\r\n                        />\r\n                    </Space>\r\n                    <Space size=\"middle\">\r\n                        Time Column(Optional):\r\n                        <Tooltip placement=\"bottomLeft\" title={text2}>\r\n                            <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                        </Tooltip>\r\n                        <input\r\n                          type='text'\r\n                          placeholder='TimeColumn'\r\n                          name='TimeColumn'\r\n                          className='form-control'\r\n                          value={this.state.TimeColumn}\r\n                          onChange={this.onChange}\r\n                        />\r\n                    </Space>\r\n                    </Space>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    <div className={styles.DVBox} style={{ padding: 2, minHeight: 120,maxWidth:410}}>\r\n                        <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n                            <h1>Variable Types</h1>\r\n                            <input\r\n                            type='number'\r\n                            placeholder='Numerical'\r\n                            name='Numerical'\r\n                            className='form-control'\r\n                            value={this.state.Numerical}\r\n                            onChange={this.onChange}\r\n                          />\r\n                            <input\r\n                            type='number'\r\n                            placeholder='Categorical'\r\n                            name='Categorical'\r\n                            className='form-control'\r\n                            value={this.state.Categorical}\r\n                            onChange={this.onChange}\r\n                          />\r\n                            <input\r\n                            type='number'\r\n                            placeholder='Text'\r\n                            name='Text'\r\n                            className='form-control'\r\n                            value={this.state.Text}\r\n                            onChange={this.onChange}\r\n                          />\r\n                        </Space>\r\n                    </div>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n        </Space>\r\n        <div className={styles.DVBox} style={{ padding: 20}}>\r\n            <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n            <div className=\"site-card-wrapper\">\r\n                <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex'}}>\r\n                    <Space size=\"middle\">\r\n                        Choose Feature:\r\n                        <Tooltip placement=\"bottomLeft\" title={text3}>\r\n                            <Button shape=\"circle\" icon={<QuestionCircleOutlined />}></Button>\r\n                        </Tooltip>\r\n                        <input\r\n                            type='text'\r\n                            placeholder='Feature'\r\n                            name='Feature'\r\n                            className='form-control'\r\n                            value={this.state.Feature}\r\n                            onChange={this.onChange}\r\n                          /></Space>\r\n                          <Space size=\"middle\">\r\n                        <Button type=\"primary\" onClick={()=>{\r\n                                    var num1 = parseInt(this.state.Numerical);\r\n                                    var num2 = parseInt(this.state.Categorical);\r\n                                    Highcharts.chart('main01', {\r\n                                            title: {\r\n                                              text: this.state.Feature\r\n                                          },\r\n                                      \r\n                                          subtitle: {\r\n                                              text: ''\r\n                                          },\r\n                                      \r\n                                          yAxis: {\r\n                                              title: {\r\n                                                  text: ''\r\n                                              }\r\n                                          },\r\n                                      \r\n                                          xAxis: {\r\n                                            categories: ['Timepoint 1', 'Timepoint 2', 'Timepoint 3', 'Timepoint 4'],\r\n                                              accessibility: {\r\n                                                  rangeDescription: ''\r\n                                              }\r\n                                          },\r\n                                      \r\n                                          legend: {\r\n                                              layout: 'vertical',\r\n                                              align: 'right',\r\n                                              verticalAlign: 'middle'\r\n                                          },\r\n                                      \r\n                                          plotOptions: {\r\n                                              series: {\r\n                                                  label: {\r\n                                                      connectorAllowed: false\r\n                                                  }\r\n                                              }\r\n                                          },\r\n                                      \r\n                                          series: [{\r\n                                              name: 'Control',\r\n                                              data: [4-num1+num2, 2-num1+num2, 4-num1+num2, 5-num1+num2]\r\n                                          }, {\r\n                                              name: 'UHR',\r\n                                              data: [2-num1+num2,2-num1+num2,3-num1+num2,1-num1+num2]\r\n                                          }, {\r\n                                              name: 'Remit',\r\n                                              data: [2-num1+num2,4-num1+num2,2-num1+num2,3-num1+num2]\r\n                                          }, {\r\n                                              name: 'Convert',\r\n                                              data: [1-num1+num2,1-num1+num2,5-num1+num2,4-num1+num2]\r\n                                          }],\r\n                                      \r\n                                          responsive: {\r\n                                              rules: [{\r\n                                                  condition: {\r\n                                                      maxWidth: 500\r\n                                                  },\r\n                                                  chartOptions: {\r\n                                                      legend: {\r\n                                                          layout: 'horizontal',\r\n                                                          align: 'center',\r\n                                                          verticalAlign: 'bottom'\r\n                                                      }\r\n                                                  }\r\n                                              }]\r\n                                          }\r\n                                        })\r\n                                        ;\r\n                                }}>Train</Button></Space>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                <Space size=\"middle\">\r\n                                <button type=\"submit\" className=\"btn btn-outline-info btn-lg btn-block\">Update</button>\r\n                                <button type=\"button\" className=\"btn btn-outline-danger btn-lg btn-block\" onClick={this.onDeleteClick.bind(this,Patient._id)}>\r\n                                    <Link to=\"/home/datat\" style={{color:\"red\"}}>Delete</Link></button>\r\n                                </Space>\r\n                                </form></Space>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    Distinct:<input\r\n                            type='number    '\r\n                            placeholder='Distinct'\r\n                            name='Distinct'\r\n                            className='form-control'\r\n                            value={this.state.Distinct}\r\n                            onChange={this.onChange}\r\n                          />\r\n                    Imputed:<input\r\n                            type='number'\r\n                            placeholder='Imputed'\r\n                            name='Imputed'\r\n                            className='form-control'\r\n                            value={this.state.Imputed}\r\n                            onChange={this.onChange}\r\n                          />\r\n                    Mean:<input\r\n                            type='number'\r\n                            placeholder='Mean'\r\n                            name='Mean'\r\n                            className='form-control'\r\n                            value={this.state.Mean}\r\n                            onChange={this.onChange}\r\n                          />\r\n                    Maximun:<input\r\n                            type='number'\r\n                            placeholder='Maximun'\r\n                            name='Maximun'\r\n                            className='form-control'\r\n                            value={this.state.Maximun}\r\n                            onChange={this.onChange}\r\n                          />\r\n                    Minimun:<input\r\n                            type='number'\r\n                            placeholder='Minimun'\r\n                            name='Minimun'\r\n                            className='form-control'\r\n                            value={this.state.Minimun}\r\n                            onChange={this.onChange}\r\n                          />\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card bordered={false}>\r\n                    <div id=\"main01\" style={{heigh:\"400px\"}}>\r\n                                    \r\n                    </div>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n            </Space>\r\n        </div>        \r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default withRouter(Data);",{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","severity":1,"message":"306","line":2,"column":59,"nodeType":"307","messageId":"308","endLine":2,"endColumn":70},{"ruleId":"305","severity":1,"message":"309","line":7,"column":8,"nodeType":"307","messageId":"308","endLine":7,"endColumn":23},{"ruleId":"305","severity":1,"message":"310","line":15,"column":10,"nodeType":"307","messageId":"308","endLine":15,"endColumn":26},{"ruleId":"305","severity":1,"message":"311","line":15,"column":28,"nodeType":"307","messageId":"308","endLine":15,"endColumn":42},{"ruleId":"305","severity":1,"message":"312","line":15,"column":44,"nodeType":"307","messageId":"308","endLine":15,"endColumn":61},{"ruleId":"305","severity":1,"message":"313","line":16,"column":10,"nodeType":"307","messageId":"308","endLine":16,"endColumn":20},{"ruleId":"305","severity":1,"message":"314","line":16,"column":30,"nodeType":"307","messageId":"308","endLine":16,"endColumn":34},{"ruleId":"305","severity":1,"message":"315","line":16,"column":36,"nodeType":"307","messageId":"308","endLine":16,"endColumn":41},{"ruleId":"305","severity":1,"message":"316","line":17,"column":10,"nodeType":"307","messageId":"308","endLine":17,"endColumn":18},{"ruleId":"305","severity":1,"message":"317","line":18,"column":9,"nodeType":"307","messageId":"308","endLine":18,"endColumn":15},{"ruleId":"305","severity":1,"message":"318","line":18,"column":17,"nodeType":"307","messageId":"308","endLine":18,"endColumn":24},{"ruleId":"305","severity":1,"message":"319","line":18,"column":26,"nodeType":"307","messageId":"308","endLine":18,"endColumn":32},{"ruleId":"305","severity":1,"message":"320","line":18,"column":34,"nodeType":"307","messageId":"308","endLine":18,"endColumn":39},{"ruleId":"305","severity":1,"message":"321","line":2,"column":16,"nodeType":"307","messageId":"308","endLine":2,"endColumn":25},{"ruleId":"305","severity":1,"message":"322","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":14},{"ruleId":"305","severity":1,"message":"323","line":3,"column":10,"nodeType":"307","messageId":"308","endLine":3,"endColumn":15},{"ruleId":"305","severity":1,"message":"322","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":14},{"ruleId":"305","severity":1,"message":"324","line":5,"column":8,"nodeType":"307","messageId":"308","endLine":5,"endColumn":16},{"ruleId":"305","severity":1,"message":"323","line":8,"column":10,"nodeType":"307","messageId":"308","endLine":8,"endColumn":15},{"ruleId":"325","severity":1,"message":"326","line":31,"column":72,"nodeType":"327","messageId":"328","endLine":31,"endColumn":74},{"ruleId":"325","severity":1,"message":"326","line":31,"column":88,"nodeType":"327","messageId":"328","endLine":31,"endColumn":90},{"ruleId":"325","severity":1,"message":"329","line":40,"column":26,"nodeType":"327","messageId":"328","endLine":40,"endColumn":28},{"ruleId":"305","severity":1,"message":"323","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":15},{"ruleId":"305","severity":1,"message":"330","line":3,"column":13,"nodeType":"307","messageId":"308","endLine":3,"endColumn":20},{"ruleId":"305","severity":1,"message":"331","line":1,"column":17,"nodeType":"307","messageId":"308","endLine":1,"endColumn":26},{"ruleId":"305","severity":1,"message":"332","line":2,"column":27,"nodeType":"307","messageId":"308","endLine":2,"endColumn":33},{"ruleId":"305","severity":1,"message":"333","line":2,"column":35,"nodeType":"307","messageId":"308","endLine":2,"endColumn":40},{"ruleId":"305","severity":1,"message":"334","line":2,"column":42,"nodeType":"307","messageId":"308","endLine":2,"endColumn":48},{"ruleId":"305","severity":1,"message":"335","line":5,"column":8,"nodeType":"307","messageId":"308","endLine":5,"endColumn":18},{"ruleId":"305","severity":1,"message":"336","line":6,"column":8,"nodeType":"307","messageId":"308","endLine":6,"endColumn":20},{"ruleId":"305","severity":1,"message":"309","line":7,"column":8,"nodeType":"307","messageId":"308","endLine":7,"endColumn":23},{"ruleId":"305","severity":1,"message":"337","line":8,"column":8,"nodeType":"307","messageId":"308","endLine":8,"endColumn":22},{"ruleId":"305","severity":1,"message":"323","line":7,"column":10,"nodeType":"307","messageId":"308","endLine":7,"endColumn":15},{"ruleId":"305","severity":1,"message":"338","line":7,"column":17,"nodeType":"307","messageId":"308","endLine":7,"endColumn":22},{"ruleId":"305","severity":1,"message":"339","line":7,"column":24,"nodeType":"307","messageId":"308","endLine":7,"endColumn":30},{"ruleId":"305","severity":1,"message":"340","line":7,"column":31,"nodeType":"307","messageId":"308","endLine":7,"endColumn":38},{"ruleId":"305","severity":1,"message":"341","line":7,"column":39,"nodeType":"307","messageId":"308","endLine":7,"endColumn":45},{"ruleId":"305","severity":1,"message":"342","line":7,"column":46,"nodeType":"307","messageId":"308","endLine":7,"endColumn":53},{"ruleId":"305","severity":1,"message":"343","line":7,"column":54,"nodeType":"307","messageId":"308","endLine":7,"endColumn":58},{"ruleId":"305","severity":1,"message":"344","line":7,"column":60,"nodeType":"307","messageId":"308","endLine":7,"endColumn":63},{"ruleId":"305","severity":1,"message":"345","line":7,"column":65,"nodeType":"307","messageId":"308","endLine":7,"endColumn":68},{"ruleId":"305","severity":1,"message":"346","line":8,"column":10,"nodeType":"307","messageId":"308","endLine":8,"endColumn":22},{"ruleId":"305","severity":1,"message":"347","line":8,"column":23,"nodeType":"307","messageId":"308","endLine":8,"endColumn":45},{"ruleId":"305","severity":1,"message":"348","line":9,"column":8,"nodeType":"307","messageId":"308","endLine":9,"endColumn":14},{"ruleId":"305","severity":1,"message":"349","line":11,"column":13,"nodeType":"307","messageId":"308","endLine":11,"endColumn":23},{"ruleId":"305","severity":1,"message":"350","line":12,"column":7,"nodeType":"307","messageId":"308","endLine":12,"endColumn":11},{"ruleId":"305","severity":1,"message":"351","line":3,"column":8,"nodeType":"307","messageId":"308","endLine":3,"endColumn":13},{"ruleId":"305","severity":1,"message":"322","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":14},{"ruleId":"305","severity":1,"message":"324","line":5,"column":8,"nodeType":"307","messageId":"308","endLine":5,"endColumn":16},{"ruleId":"305","severity":1,"message":"323","line":7,"column":10,"nodeType":"307","messageId":"308","endLine":7,"endColumn":15},{"ruleId":"305","severity":1,"message":"342","line":7,"column":46,"nodeType":"307","messageId":"308","endLine":7,"endColumn":53},{"ruleId":"305","severity":1,"message":"346","line":8,"column":10,"nodeType":"307","messageId":"308","endLine":8,"endColumn":22},{"ruleId":"305","severity":1,"message":"351","line":3,"column":8,"nodeType":"307","messageId":"308","endLine":3,"endColumn":13},{"ruleId":"305","severity":1,"message":"322","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":14},{"ruleId":"305","severity":1,"message":"324","line":5,"column":8,"nodeType":"307","messageId":"308","endLine":5,"endColumn":16},{"ruleId":"305","severity":1,"message":"323","line":7,"column":10,"nodeType":"307","messageId":"308","endLine":7,"endColumn":15},{"ruleId":"305","severity":1,"message":"342","line":7,"column":46,"nodeType":"307","messageId":"308","endLine":7,"endColumn":53},{"ruleId":"305","severity":1,"message":"346","line":8,"column":10,"nodeType":"307","messageId":"308","endLine":8,"endColumn":22},{"ruleId":"305","severity":1,"message":"351","line":3,"column":8,"nodeType":"307","messageId":"308","endLine":3,"endColumn":13},{"ruleId":"305","severity":1,"message":"322","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":14},{"ruleId":"305","severity":1,"message":"324","line":5,"column":8,"nodeType":"307","messageId":"308","endLine":5,"endColumn":16},{"ruleId":"305","severity":1,"message":"323","line":7,"column":10,"nodeType":"307","messageId":"308","endLine":7,"endColumn":15},{"ruleId":"305","severity":1,"message":"342","line":7,"column":46,"nodeType":"307","messageId":"308","endLine":7,"endColumn":53},{"ruleId":"305","severity":1,"message":"346","line":8,"column":10,"nodeType":"307","messageId":"308","endLine":8,"endColumn":22},{"ruleId":"305","severity":1,"message":"306","line":2,"column":59,"nodeType":"307","messageId":"308","endLine":2,"endColumn":70},{"ruleId":"305","severity":1,"message":"352","line":10,"column":7,"nodeType":"307","messageId":"308","endLine":10,"endColumn":11},{"ruleId":"325","severity":1,"message":"326","line":84,"column":72,"nodeType":"327","messageId":"328","endLine":84,"endColumn":74},{"ruleId":"325","severity":1,"message":"326","line":84,"column":88,"nodeType":"327","messageId":"328","endLine":84,"endColumn":90},{"ruleId":"325","severity":1,"message":"329","line":93,"column":26,"nodeType":"327","messageId":"328","endLine":93,"endColumn":28},{"ruleId":"325","severity":1,"message":"329","line":229,"column":32,"nodeType":"327","messageId":"328","endLine":229,"endColumn":34},{"ruleId":"305","severity":1,"message":"353","line":270,"column":9,"nodeType":"307","messageId":"308","endLine":270,"endColumn":13},{"ruleId":"325","severity":1,"message":"329","line":287,"column":56,"nodeType":"327","messageId":"328","endLine":287,"endColumn":58},{"ruleId":"301","replacedBy":"354"},{"ruleId":"303","replacedBy":"355"},{"ruleId":"305","severity":1,"message":"322","line":2,"column":10,"nodeType":"307","messageId":"308","endLine":2,"endColumn":14},{"ruleId":"305","severity":1,"message":"323","line":3,"column":10,"nodeType":"307","messageId":"308","endLine":3,"endColumn":15},{"ruleId":"305","severity":1,"message":"323","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":15},{"ruleId":"305","severity":1,"message":"323","line":7,"column":10,"nodeType":"307","messageId":"308","endLine":7,"endColumn":15},{"ruleId":"305","severity":1,"message":"338","line":7,"column":17,"nodeType":"307","messageId":"308","endLine":7,"endColumn":22},{"ruleId":"305","severity":1,"message":"339","line":7,"column":24,"nodeType":"307","messageId":"308","endLine":7,"endColumn":30},{"ruleId":"305","severity":1,"message":"340","line":7,"column":31,"nodeType":"307","messageId":"308","endLine":7,"endColumn":38},{"ruleId":"305","severity":1,"message":"341","line":7,"column":39,"nodeType":"307","messageId":"308","endLine":7,"endColumn":45},{"ruleId":"305","severity":1,"message":"342","line":7,"column":46,"nodeType":"307","messageId":"308","endLine":7,"endColumn":53},{"ruleId":"305","severity":1,"message":"343","line":7,"column":54,"nodeType":"307","messageId":"308","endLine":7,"endColumn":58},{"ruleId":"305","severity":1,"message":"344","line":7,"column":60,"nodeType":"307","messageId":"308","endLine":7,"endColumn":63},{"ruleId":"305","severity":1,"message":"345","line":7,"column":65,"nodeType":"307","messageId":"308","endLine":7,"endColumn":68},{"ruleId":"305","severity":1,"message":"346","line":8,"column":10,"nodeType":"307","messageId":"308","endLine":8,"endColumn":22},{"ruleId":"305","severity":1,"message":"347","line":8,"column":23,"nodeType":"307","messageId":"308","endLine":8,"endColumn":45},{"ruleId":"305","severity":1,"message":"348","line":9,"column":8,"nodeType":"307","messageId":"308","endLine":9,"endColumn":14},{"ruleId":"305","severity":1,"message":"349","line":11,"column":13,"nodeType":"307","messageId":"308","endLine":11,"endColumn":23},{"ruleId":"305","severity":1,"message":"350","line":12,"column":7,"nodeType":"307","messageId":"308","endLine":12,"endColumn":11},{"ruleId":"305","severity":1,"message":"331","line":1,"column":17,"nodeType":"307","messageId":"308","endLine":1,"endColumn":26},{"ruleId":"305","severity":1,"message":"332","line":2,"column":27,"nodeType":"307","messageId":"308","endLine":2,"endColumn":33},{"ruleId":"305","severity":1,"message":"333","line":2,"column":35,"nodeType":"307","messageId":"308","endLine":2,"endColumn":40},{"ruleId":"305","severity":1,"message":"334","line":2,"column":42,"nodeType":"307","messageId":"308","endLine":2,"endColumn":48},{"ruleId":"356","severity":1,"message":"357","line":58,"column":15,"nodeType":"358","endLine":58,"endColumn":53},{"ruleId":"305","severity":1,"message":"323","line":3,"column":10,"nodeType":"307","messageId":"308","endLine":3,"endColumn":15},{"ruleId":"305","severity":1,"message":"338","line":3,"column":17,"nodeType":"307","messageId":"308","endLine":3,"endColumn":22},{"ruleId":"305","severity":1,"message":"339","line":3,"column":24,"nodeType":"307","messageId":"308","endLine":3,"endColumn":30},{"ruleId":"305","severity":1,"message":"340","line":3,"column":31,"nodeType":"307","messageId":"308","endLine":3,"endColumn":38},{"ruleId":"305","severity":1,"message":"341","line":3,"column":39,"nodeType":"307","messageId":"308","endLine":3,"endColumn":45},{"ruleId":"305","severity":1,"message":"342","line":3,"column":46,"nodeType":"307","messageId":"308","endLine":3,"endColumn":53},{"ruleId":"305","severity":1,"message":"343","line":3,"column":54,"nodeType":"307","messageId":"308","endLine":3,"endColumn":58},{"ruleId":"305","severity":1,"message":"344","line":3,"column":60,"nodeType":"307","messageId":"308","endLine":3,"endColumn":63},{"ruleId":"305","severity":1,"message":"345","line":3,"column":65,"nodeType":"307","messageId":"308","endLine":3,"endColumn":68},{"ruleId":"305","severity":1,"message":"347","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":32},{"ruleId":"305","severity":1,"message":"348","line":5,"column":8,"nodeType":"307","messageId":"308","endLine":5,"endColumn":14},{"ruleId":"305","severity":1,"message":"349","line":8,"column":13,"nodeType":"307","messageId":"308","endLine":8,"endColumn":23},{"ruleId":"305","severity":1,"message":"359","line":9,"column":7,"nodeType":"307","messageId":"308","endLine":9,"endColumn":12},{"ruleId":"305","severity":1,"message":"360","line":10,"column":11,"nodeType":"307","messageId":"308","endLine":10,"endColumn":16},{"ruleId":"305","severity":1,"message":"361","line":11,"column":11,"nodeType":"307","messageId":"308","endLine":11,"endColumn":16},{"ruleId":"305","severity":1,"message":"362","line":12,"column":11,"nodeType":"307","messageId":"308","endLine":12,"endColumn":16},{"ruleId":"305","severity":1,"message":"323","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":15},{"ruleId":"305","severity":1,"message":"340","line":4,"column":31,"nodeType":"307","messageId":"308","endLine":4,"endColumn":38},{"ruleId":"305","severity":1,"message":"341","line":4,"column":39,"nodeType":"307","messageId":"308","endLine":4,"endColumn":45},{"ruleId":"305","severity":1,"message":"342","line":4,"column":46,"nodeType":"307","messageId":"308","endLine":4,"endColumn":53},{"ruleId":"305","severity":1,"message":"343","line":4,"column":54,"nodeType":"307","messageId":"308","endLine":4,"endColumn":58},{"ruleId":"305","severity":1,"message":"344","line":4,"column":60,"nodeType":"307","messageId":"308","endLine":4,"endColumn":63},{"ruleId":"305","severity":1,"message":"345","line":4,"column":65,"nodeType":"307","messageId":"308","endLine":4,"endColumn":68},{"ruleId":"356","severity":1,"message":"357","line":111,"column":19,"nodeType":"358","endLine":111,"endColumn":57},{"ruleId":"305","severity":1,"message":"322","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":14},{"ruleId":"305","severity":1,"message":"323","line":5,"column":10,"nodeType":"307","messageId":"308","endLine":5,"endColumn":15},{"ruleId":"305","severity":1,"message":"341","line":5,"column":39,"nodeType":"307","messageId":"308","endLine":5,"endColumn":45},{"ruleId":"305","severity":1,"message":"342","line":5,"column":46,"nodeType":"307","messageId":"308","endLine":5,"endColumn":53},{"ruleId":"305","severity":1,"message":"346","line":6,"column":10,"nodeType":"307","messageId":"308","endLine":6,"endColumn":22},{"ruleId":"305","severity":1,"message":"323","line":5,"column":10,"nodeType":"307","messageId":"308","endLine":5,"endColumn":15},{"ruleId":"305","severity":1,"message":"341","line":5,"column":39,"nodeType":"307","messageId":"308","endLine":5,"endColumn":45},{"ruleId":"305","severity":1,"message":"342","line":5,"column":46,"nodeType":"307","messageId":"308","endLine":5,"endColumn":53},{"ruleId":"305","severity":1,"message":"346","line":6,"column":10,"nodeType":"307","messageId":"308","endLine":6,"endColumn":22},"no-native-reassign",["363"],"no-negated-in-lhs",["364"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'ShowBookDetails' is defined but never used.","'DatabaseOutlined' is defined but never used.","'LayoutOutlined' is defined but never used.","'LineChartOutlined' is defined but never used.","'Breadcrumb' is defined but never used.","'Menu' is defined but never used.","'theme' is defined but never used.","'useState' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'useParams' is defined but never used.","'Link' is defined but never used.","'Input' is defined but never used.","'BookCard' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'echarts' is defined but never used.","'Component' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'CreateBook' is defined but never used.","'ShowBookList' is defined but never used.","'UpdateBookInfo' is defined but never used.","'Space' is defined but never used.","'Button' is defined but never used.","'Tooltip' is defined but never used.","'Select' is defined but never used.","'Divider' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'RedoOutlined' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'styles' is defined but never used.","'Highcharts' is defined but never used.","'text' is assigned a value but never used.","'axios' is defined but never used.","'Data' is defined but never used.","'num3' is assigned a value but never used.",["363"],["364"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'text1' is assigned a value but never used.","'text2' is assigned a value but never used.","'text3' is assigned a value but never used.","'text4' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]